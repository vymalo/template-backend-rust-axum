services:
  tracking:
    image: jaegertracing/all-in-one:latest
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: 0.5
    ports:
      - "4317:4317" # OpenTelemetry gRPC receiver
      - "4318:4318" # OpenTelemetry receiver
      - "14268:14268" # Jaeger receiver
      - "16686:16686" # Jaeger UI
    environment:
      COLLECTOR_OTLP_ENABLED: "true"

  postgres:
    image: postgres
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: 0.5
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app_rust}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app_rust-password}
      POSTGRES_DB: ${POSTGRES_DB:-app_rust}
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT:-5432}:5432

  adminer:
    image: adminer
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: 0.5
    ports:
      - ${ADMINER_PORT:-18080}:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DEFAULT_USERNAME: ${POSTGRES_USER:-app_rust}
      ADMINER_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD:-app_rust-password}
      ADMINER_DESIGN: ${ADMINER_DESIGN:-dracula}
      ADMINER_PLUGINS: ${ADMINER_PLUGINS:-tables-filter tinymce}

  app:
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: 0.5
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      DB_URL: postgres://${POSTGRES_USER:-app_rust}:${POSTGRES_PASSWORD:-app_rust-password}@postgres/${POSTGRES_DB:-app_rust}
      OTLP_SPAN_ENDPOINT: http://tracking:4317
      OTLP_METRIC_ENDPOINT: http://tracking:4318/v1/metrics
      OTLP_SERVICE_NAME: app_rust
      OTLP_VERSION: 1.0.0-rc1
      LOG_LEVEL: ${LOG_LEVEL:-warn}
    ports:
      - ${APP_PORT:-3000}:3000
    depends_on:
      - postgres
    links:
      - postgres

  artillery:
    image: artilleryio/artillery
    command:
      - "run"
      - "-o"
      - "/tmp/artillery/test-run-report.json"
      - "/scripts/script.yaml"
    volumes:
      - .docker/artillery:/scripts
      - .docker/tmp:/tmp/artillery
    depends_on:
      - app

  openapi-generator-cli:
    image: openapitools/openapi-generator-cli
    volumes:
      - ./packages:/packages
      - ./openapi.yaml:/openapi.yaml:ro
    command:
      - generate
      - -i
      - /openapi.yaml
      - -g
      - rust-axum
      - -o
      - /packages/gen-server
      - --package-name
      - gen-server
volumes:
  db: { }